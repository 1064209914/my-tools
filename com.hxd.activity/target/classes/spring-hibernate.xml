<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans   
    	http://www.springframework.org/schema/beans/spring-beans.xsd    
    	http://www.springframework.org/schema/tx   
    	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 质检mysql连接 -->
	<bean id="dataSourceJHZJ" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbcjhzj.driverClass}" />
		<property name="jdbcUrl" value="${jdbcjhzj.jdbcUrl}" />
		<property name="user" value="${jdbcjhzj.user}" />
		<property name="password" value="${jdbcjhzj.password}" />
		<!-- 指定连接池中保留的最大连接数. Default:15-->  
        <property name="maxPoolSize" value="${jdbcjhzj.maxPoolSize}"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        <property name="minPoolSize" value="${jdbcjhzj.minPoolSize}"/>  
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->  
        <property name="initialPoolSize" value="${jdbcjhzj.initialPoolSize}"/>  
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="${jdbcjhzj.maxIdleTime}"/>  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  
        <property name="acquireIncrement" value="${jdbcjhzj.acquireIncrement}"/>  
        <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
      	  但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->  
        <property name="maxStatements" value="${jdbcjhzj.maxStatements}"/>  
        <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
        <property name="idleConnectionTestPeriod" value="${jdbcjhzj.idleConnectionTestPeriod}"/>
	</bean>
	<!-- mysql连接 -->
<!-- 	<bean id="dataSource" class="com.htfg.callcenter.dxzj.common.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourceJHZJ" value-ref="dataSourceJHZJ" />
				<entry key="dataSourceJHDX" value-ref="dataSourceJHDX" />
			</map>
		</property>
		默认使用的数据源
		<property name="defaultTargetDataSource" ref="dataSourceJHZJ" />
	</bean> -->
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceJHZJ" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				<!-- hibernate.hbm2ddl.auto=update -->
				hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
				hibernate.cache.use_query_cache=false
				hibernate.jdbc.fetch_size=10
				hibernate.jdbc.batch_size=10
			</value>
	</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceJHZJ" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
	</bean> -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	 <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
    <tx:method name="save*"  read-only="false"  propagation="REQUIRED"/>
    <tx:method name="delete*" propagation="REQUIRED" read-only="false" />
    <tx:method name="update*" propagation="REQUIRED" read-only="false" />
    <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>
    <tx:method name="*" read-only="false"/>
    </tx:attributes>
    </tx:advice>

</beans>